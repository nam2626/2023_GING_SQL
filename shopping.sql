--관리자 권한을 가진 계정 생성
CREATE USER SHOPPING_ADMIN IDENTIFIED BY 123456;
GRANT DBA TO SHOPPING_ADMIN;

---------------------------------
CREATE TABLE SHOPPING_MEMBER (
	MEMBER_ID	VARCHAR2(30)		NOT NULL,
	MEMBER_GRADE_NO	NUMBER(1)		NOT NULL,
	MEMBER_PASSWD	VARCHAR2(30)		NOT NULL,
	MEMBER_NAME	VARCHAR2(30)		NULL,
	MEMBER_TEL	CHAR(11)		NULL,
	MEMBER_EMAIL	VARCHAR2(50)		NULL,
	MEMBER_POINT	NUMBER		NULL,
	MEMBER_BIRTHDAY	DATE		NULL
);

CREATE TABLE SHOPPING_MEMBER_GRADE (
	MEMBER_GRADE_NO	NUMBER(1)		NOT NULL,
	MEMBER_GRADE_NAME	VARCHAR2(15)		NULL
);

CREATE TABLE SHOPPING_SELLER (
	SELLER_ID	VARCHAR2(30)		NOT NULL,
	SELLER_PASSWD	VARCHAR2(30)		NOT NULL,
	SELLER_BUSINESS_NO	CHAR(10)		NOT NULL,
	SELLER_BUSINESS_NAME	VARCHAR2(50)		NULL,
	SELLER_CEO	VARCHAR2(30)		NULL,
	SELLER_EMAIL	VARCHAR2(50)		NULL,
	SELLER_BUSINESS_TEL	CHAR(11)		NULL,
	SELLER_BUSINESS_TEL_NO	CHAR(20)		NULL,
	SELLER_BUSINESS_ADDRESS	VARCHAR2(100)		NULL
);

CREATE TABLE SHOPPING_PRODUCT (
	PRODUCT_NO	CHAR(8)		NOT NULL,
	SELLER_ID	VARCHAR2(30)		NOT NULL,
	PRODUCT_NAME	VARCHAR2(50)		NULL,
	PRODUCT_ORIGIN	VARCHAR2(50)		NULL,
	PRODUCT_EA	NUMBER		NULL,
	PRODUCT_PRICE	NUMBER		NULL,
	PRODUCT_KC_NO	VARCHAR2(24)		NULL,
	PRODUCT_MAIN_IMG	VARCHAR2(300)		NULL,
	PRODUCT_THUMBNAIL_IMG	VARCHAR2(300)		NULL,
	PRODUCT_ENABLE	NUMBER(1)		NULL,
	PRODUCT_REG_DATE	DATE	DEFAULT SYSDATE
);

CREATE TABLE SHOPPING_MEMBER_ADDRESS (
	MEMBER_ID	VARCHAR2(30)		NOT NULL,
	MEMBER_ADDRESS_NAME	VARCHAR2(30)		NULL,
	MEMBER_ADDRESS	VARCHAR2(100)		NULL,
	MEMBER_ADDRESS_TEL	CHAR(11)		NULL
);

CREATE TABLE SHOPPING_PRODUCT_REVIEW (
	MEMBER_ID	VARCHAR2(30)		NOT NULL,
	PRODUCT_NO	CHAR(8)		NOT NULL,
	PRODUCT_REVIEW_CONTENT	VARCHAR2(1500)		NULL,
	PRODUCT_STAR	NUMBER(1)		NULL,
	PRODUCT_REVIEW_DATE	DATE	DEFAULT SYSDATE
);

CREATE TABLE SHOPPING_CUPON (
	CUPON_NO	CHAR(8)		NOT NULL,
	SELLER_ID	VARCHAR2(30)		NOT NULL,
	CUPON_EXPIRE_DATE	DATE	DEFAULT SYSDATE+10,
	CUPON_PRICE	NUMBER		NULL
);

CREATE TABLE SHOPPING_PARCEL (
	PARCEL_NO	CHAR(4)		NOT NULL,
	SELLER_ID	VARCHAR2(30)		NOT NULL,
	PARCEL_NAME	VARCHAR2(50)		NULL,
	PARCEL_TEL_NO	CHAR(11)		NULL,
	PARCEL_PRICE	NUMBER		NULL
);

CREATE TABLE SHOPPING_ORDER (
	ORDER_NO	CHAR(8)		NOT NULL,
	MEMBER_ID	VARCHAR2(30)		NOT NULL,
	PRODUCT_NO	CHAR(8)		NOT NULL,
	SELLER_ID	VARCHAR2(30)		NOT NULL,
	CUPON_NO	CHAR(8)		NOT NULL,
	ORDER_DATE	DATE	DEFAULT SYSDATE,
	ORDER_ADDRESS	VARCHAR2(100)		NULL,
	ORDER_ADDRESS_NAME	VARCHAR2(50)		NULL,
	ORDER_ADDRESS_TEL	CHAR(11)		NULL,
	ORDER_EA	NUMBER		NULL,
	ORDER_CREDIT_MONEY	NUMBER		NULL,
	ORDER_PARCEL_STATE	NUMBER(1)	DEFAULT 0,
	ORDER_CREDIT_KIND	NUMBER(1)		NULL,
	ORDER_STATE	NUMBER(1)	DEFAULT 0
);

ALTER TABLE SHOPPING_MEMBER ADD CONSTRAINT PK_SHOPPING_MEMBER PRIMARY KEY (
	MEMBER_ID);

ALTER TABLE SHOPPING_MEMBER_GRADE ADD CONSTRAINT PK_SHOPPING_MEMBER_GRADE PRIMARY KEY (
	MEMBER_GRADE_NO
);

ALTER TABLE SHOPPING_SELLER ADD CONSTRAINT PK_SHOPPING_SELLER PRIMARY KEY (
	SELLER_ID
);

ALTER TABLE SHOPPING_PRODUCT ADD CONSTRAINT PK_SHOPPING_PRODUCT PRIMARY KEY (
	PRODUCT_NO
);

ALTER TABLE SHOPPING_PRODUCT_REVIEW ADD CONSTRAINT PK_SHOPPING_PRODUCT_REVIEW PRIMARY KEY (
	MEMBER_ID,
	PRODUCT_NO
);

ALTER TABLE SHOPPING_CUPON ADD CONSTRAINT PK_SHOPPING_CUPON PRIMARY KEY (
	CUPON_NO
);

ALTER TABLE SHOPPING_PARCEL ADD CONSTRAINT PK_SHOPPING_PARCEL PRIMARY KEY (
	PARCEL_NO
);

ALTER TABLE SHOPPING_ORDER ADD CONSTRAINT PK_SHOPPING_ORDER PRIMARY KEY (
	ORDER_NO
);

ALTER TABLE SHOPPING_MEMBER ADD CONSTRAINT FK_SHOPPING_MEMBER_GRADE FOREIGN KEY (
	MEMBER_GRADE_NO
)
REFERENCES SHOPPING_MEMBER_GRADE (
	MEMBER_GRADE_NO
);

ALTER TABLE SHOPPING_PRODUCT ADD CONSTRAINT FK_SHOPPING_SELLER_ID FOREIGN KEY (
	SELLER_ID
)
REFERENCES SHOPPING_SELLER (
	SELLER_ID
);

ALTER TABLE SHOPPING_MEMBER_ADDRESS ADD CONSTRAINT FK_SHOPPING_MEMBER_ID FOREIGN KEY (
	MEMBER_ID
)
REFERENCES SHOPPING_MEMBER (
	MEMBER_ID
);

ALTER TABLE SHOPPING_CUPON ADD CONSTRAINT FK_SHOPPING_CUPON_ID FOREIGN KEY (
	SELLER_ID
)
REFERENCES SHOPPING_SELLER (
	SELLER_ID
);

ALTER TABLE SHOPPING_PARCEL ADD CONSTRAINT FK_SHOPPING_PARCEL_ID FOREIGN KEY (
	SELLER_ID
)
REFERENCES SHOPPING_SELLER (
	SELLER_ID
);

ALTER TABLE SHOPPING_ORDER ADD CONSTRAINT FK_SHOPPING_ORDER_MEMBER_ID FOREIGN KEY (
	MEMBER_ID
)
REFERENCES SHOPPING_MEMBER (
	MEMBER_ID
);

ALTER TABLE SHOPPING_ORDER ADD CONSTRAINT FK_SHOPPING_ORDER_PRODUCT_NO FOREIGN KEY (
	PRODUCT_NO
)
REFERENCES SHOPPING_PRODUCT (
	PRODUCT_NO
);

ALTER TABLE SHOPPING_ORDER ADD CONSTRAINT FK_SHOPPING_ORDER_SELLER_ID FOREIGN KEY (
	SELLER_ID
)
REFERENCES SHOPPING_SELLER (
	SELLER_ID
);

ALTER TABLE SHOPPING_ORDER ADD CONSTRAINT FK_SHOPPING_ORDER_CUPON_NO FOREIGN KEY (
	CUPON_NO
)
REFERENCES SHOPPING_CUPON (
	CUPON_NO
);
----------------------------
SELECT * FROM shopping_member sm ;








