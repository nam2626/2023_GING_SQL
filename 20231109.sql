--그룹 함수 : SUM, AVG, COUNT, MAX, MIN, STDDEV, VARIANCE
--SUM(컬럼명) : 그룹을 묶은 기준으로 해당 컬럼을 가지고 합을 구함
--학과별 평점 총합을 조회
SELECT STD_MAJOR, SUM(STD_SCORE) FROM STUDENT GROUP BY STD_MAJOR;
--학과명이 동일한 기준으로 묶어서 조회를 하기 떄문에 묶이지 않는 컬럼은 조회용으로 쓸수 없다.
SELECT STD_MAJOR, STD_NAME, SUM(STD_SCORE) FROM STUDENT GROUP BY STD_MAJOR;
--학과별 평점의 평균을 조회, 소수점은 둘째 자리까지만, 컬럼명을 AVG_SCORE로 변경해서 조회
SELECT STD_MAJOR, AVG(STD_SCORE) FROM STUDENT GROUP BY STD_MAJOR;
SELECT STD_MAJOR, TRUNC(AVG(STD_SCORE),2) AS AVG_SCORE
FROM STUDENT GROUP BY STD_MAJOR;
--학과별 인원수를 조회
SELECT STD_MAJOR, COUNT(*) FROM STUDENT GROUP BY STD_MAJOR;
--학과별 평점의 최대값/최소값 조회
SELECT STD_MAJOR, MAX(STD_SCORE),MIN(STD_SCORE) FROM STUDENT GROUP BY STD_MAJOR;
--학과별 평점의 분산, 표준편차 조회
SELECT STD_MAJOR, STDDEV(STD_SCORE), VARIANCE(STD_SCORE)
FROM STUDENT GROUP BY STD_MAJOR; 
--전체 인원을 대상으로 평점, 인원수, 최대값, 최소값
SELECT AVG(STD_SCORE), COUNT(*), MAX(STD_SCORE), MIN(STD_SCORE)  FROM STUDENT;
--학과별 인원수를 조회, 단 평점이 3.0 이상인 학생들만 대상으로 인원수를 조회
--SELECT / FROM / WHERE / GROUP BY / HAVING
SELECT STD_MAJOR, COUNT(*) FROM STUDENT 
WHERE STD_SCORE >= 3.0
GROUP BY STD_MAJOR;
--학과별 평점을 조회. 단, 학과인원수가 3명이상인 학과만 대상으로 조회
SELECT STD_MAJOR, avg(STD_SCORE) 
FROM STUDENT 
GROUP BY STD_MAJOR HAVING count(*) >= 3 ;
--학번이 10 학번인 학생들의 각 학과별 인원수를 출력    
SELECT STD_MAJOR, count(*) 
FROM STUDENT 
WHERE substr(STD_NO,1,4) = '2010'
GROUP BY STD_MAJOR;
--학번별 인원수, 평점의 평균을 조회
SELECT SUBSTR(STD_NO,1,4), count(*), avg(std_score)
FROM STUDENT
GROUP BY SUBSTR(STD_NO,1,4);
--학번-학과별 인원수 조회
SELECT STD_MAJOR, SUBSTR(STD_NO,1,4), COUNT(*)  
FROM STUDENT
GROUP BY STD_MAJOR, SUBSTR(STD_NO,1,4);

--자동차 메이커별 제품 개수, 평균 금액
SELECT CAR_MAKER, COUNT(*), AVG(CAR_PRICE)  
FROM CAR
GROUP BY CAR_MAKER;
--년도별 자동차 제품 개수
SELECT CAR_MAKE_YEAR, COUNT(*)
FROM CAR
GROUP BY CAR_MAKE_YEAR;
--년도별, 메이커별, 제품 개수, 평균 금액
SELECT CAR_MAKE_YEAR, CAR_MAKER, COUNT(*), AVG(CAR_PRICE)  
FROM CAR
GROUP BY CAR_MAKE_YEAR, CAR_MAKER;
--자동차 메이커별 제품 개수, 평균 금액, 단 제품개수가 40대 이상인 회사로 제한
SELECT CAR_MAKER, COUNT(*), AVG(CAR_PRICE)  
FROM CAR
GROUP BY CAR_MAKER HAVING count(*) >= 40;













