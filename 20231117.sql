-- 함수
CREATE OR REPLACE FUNCTION GET_MAJAOR_NAME(IN_MAJOR_NO IN NUMBER)
RETURN VARCHAR2
IS
    --사용할 변수 선언
    NAME VARCHAR2(50);
BEGIN
    --조회된 결과를 변수 NAME에 저장
    SELECT MAJOR_NAME INTO NAME FROM MAJOR WHERE MAJOR_NO = IN_MAJOR_NO;
    RETURN NAME;
END;
SELECT GET_MAJAOR_NAME(2) FROM DUAL;

CREATE OR REPLACE FUNCTION GET_ODD_EVEN(N IN NUMBER)
RETURN VARCHAR2
IS
    MSG VARCHAR2(100);
BEGIN
    IF N = 0 THEN
        MSG := '0입이니다.';
    ELSIF MOD(N,2) = 1 THEN
        MSG := '홀수 입니다.';
    ELSE
        MSG := '짝수입니다.';
    END IF;
    RETURN MSG;
END;

SELECT get_odd_even(3) FROM DUAL;

CREATE OR REPLACE FUNCTION GET_SCORE_GRADE(SCORE IN NUMBER)
RETURN VARCHAR2
AS 
	GRADE VARCHAR2(30) := 'F';
BEGIN
	--성적 등급, A+,A,B+,B,C+,C,D+,D,F
    IF SCORE = 4.5 THEN
        GRADE := 'A+';
    ELSIF SCORE >= 4.0 THEN
        GRADE := 'A';
    ELSIF SCORE >= 3.5 THEN
        GRADE := 'B+';
    ELSIF SCORE >= 3.0 THEN
        GRADE := 'B';
    ELSIF SCORE >= 2.5 THEN
        GRADE := 'C+';
    ELSIF SCORE >= 2.0 THEN
        GRADE := 'C';
    ELSIF SCORE >= 1.5 THEN
        GRADE := 'D+';
    ELSIF SCORE >= 1.0 THEN
        GRADE := 'D';
    ELSE
        GRADE := 'F';
    END IF;    
    
	RETURN GRADE;
END GET_SCORE_GRADE;

SELECT GET_SCORE_GRADE(3.6) FROM DUAL;

--학생 정보 출력시
--학번, 이름, 학과명, 평점, 평점, 등급, 성별
SELECT S.STD_NO, S.STD_NAME, M.MAJOR_NAME, S.STD_SCORE, GET_SCORE_GRADE(S.STD_SCORE) AS STD_GRADE, S.GENDER
FROM STUDENT S JOIN MAJOR M ON S.MAJOR_NO = M.MAJOR_NO;











